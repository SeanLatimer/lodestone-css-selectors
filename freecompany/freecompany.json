{
	"ACTIVE_STATE": {
		"selector": "div.ldst__window:nth-of-type(2) > p:nth-of-type(1)",
		"regex": "\\s*(?P<ActiveState>\\w+)\\s*"
	},
	"ACTIVE_MEMBER_COUNT": {
		"selector": "div.ldst__window:nth-of-type(1) > p.freecompany__text:nth-of-type(6)"
	},
	"CREST_LAYERS": {
		"BASE": {
			"selector": "div.ldst__window:nth-of-type(1) img.entry__freecompany__crest__base",
			"attribute": "src"
		},
		"BOTTOM": {
			"selector": "div.ldst__window:nth-of-type(1) div.entry__freecompany__crest__image img:nth-of-type(1)",
			"attribute": "src"
		},
		"MIDDLE": {
			"selector": "div.ldst__window:nth-of-type(1) div.entry__freecompany__crest__image img:nth-of-type(2)",
			"attribute": "src"
		},
		"TOP": {
			"selector": "div.ldst__window:nth-of-type(1) div.entry__freecompany__crest__image img:nth-of-type(3)",
			"attribute": "src"
		}
	},
	"ESTATE": {
		"NO_ESTATE": {
			"selector": "div.ldst__window:nth-of-type(1) > p.freecompany__estate__none"
		},
		"GREETING": {
			"selector": "div.ldst__window:nth-of-type(1) > p.freecompany__estate__greeting"
		},
		"NAME": {
			"selector": "div.ldst__window:nth-of-type(1) > p.freecompany__estate__name"
		},
		"PLOT": {
			"selector": "div.ldst__window:nth-of-type(1) > p.freecompany__estate__text"
		}
	},
	"FORMED": {
		"selector": "div.ldst__window:nth-of-type(1) > p.freecompany__text:nth-of-type(5) > script",
		"regex": ".*ldst_strftime\\((?P<Timestamp>\\d*)"
	},
	"GRAND_COMPANY": {
		"selector": "div.ldst__window:nth-of-type(1) p.entry__freecompany__gc:nth-of-type(1)",
		"regex": "(?P<GCName>\\w+) <(?P<GCRank>\\w+)>"
	},
	"ID": {
		"selector": "div.ldst__window:nth-of-type(1) a.entry__freecompany",
		"attribute": "href",
		"regex": "/lodestone/freecompany/(?P<ID>\\d*)/"
	},
	"NAME": {
		"selector": "div.ldst__window:nth-of-type(1) > p.freecompany__text__name"
	},
	"RANK": {
		"selector": "div.ldst__window:nth-of-type(1) > p.freecompany__text:nth-of-type(7)"
	},
	"RANKING": {
		"WEEKLY": {
			"selector": "div.ldst__window:nth-of-type(1) > table.character__ranking__data tr:nth-of-type(1) > th:nth-of-type(1)",
			"regex": "Weekly Rank:(?P<Weekly>.+) \\(previous week\\)"
		},
		"MONTHLY": {
			"selector": "div.ldst__window:nth-of-type(1)> table.character__ranking__data tr:nth-of-type(2) > th:nth-of-type(1)",
			"regex": "Monthly Rank:(?P<Monthly>.*) \\(previous month\\)"
		}
	},
	"RECRUITMENT": {
		"selector": "div.ldst__window:nth-of-type(2) > p:nth-of-type(2)",
		"regex": "\\s*(?P<Recruitment>\\w+)\\s*"
	},
	"SERVER": {
		"selector": "div.ldst__window:nth-of-type(1) > div.entry > a.entry__freecompany > div.entry__freecompany__box > p:nth-of-type(3)",
		"regex": "(?P<World>\\w*)\\s+\\[(?P<DC>\\w*)\\]"
	},
	"SLOGAN": {
		"selector": "div.ldst__window:nth-of-type(1) > p.freecompany__text.freecompany__text__message"
	},
	"TAG": {
		"selector": "div.ldst__window:nth-of-type(1) > p.freecompany__text.freecompany__text__tag"
	}
}
